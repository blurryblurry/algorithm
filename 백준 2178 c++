#include <iostream>
#include <queue>
#define MAX 101
using namespace std;

int arr[MAX][MAX];
bool visit[MAX][MAX];
int dist[MAX][MAX];
int N, M;

int x[4]={-1,0,1,0};
int y[4]={0,1,0,-1};

queue <pair<int, int>> q;

void bfs(int a,int b){
  
  visit[a][b]=true;
  q.push(make_pair(a,b));
  dist[a][b]++;
  
  while(!q.empty()){
    int m = q.front().first;
    int n = q.front().second;
    
    q.pop();
    
    for(int i=0; i<4; i++){
      int xx = m+x[i];
      int yy = n+y[i];

      if(xx<0 || xx>=N || yy<0 || yy>=M ) continue;
      if(arr[xx][yy]==1 && !visit[xx][yy]){
        visit[xx][yy]=true;
        q.push(make_pair(xx,yy));
        dist[xx][yy] = dist[m][n] + 1;
      
      }
    
    }
        
        
    
  }
    
}

int main()
{
  
  cin>>N>>M;
  for(int i=0;i<N;i++){
    string s;
    cin>>s;
    for(int j=0;j<M;j++){
      arr[i][j]=s[j]-'0';
    }
  }
  
  bfs(0,0);

  cout<<dist[N-1][M-1];
  return 0;
}

  
