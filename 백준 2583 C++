#include <iostream>
#include <string.h>
#include <algorithm>
#include <vector>
using namespace std;

int arr[100][100];
bool visit[100][100];
int x[4]={-1,0,1,0};
int y[4]={0,1,0,-1};
vector <int> ans;
int M,N,K,cnt;

void dfs(int a,int b){
  
  for(int i=0;i<4;i++){
    int dx = a + x[i];
    int dy = b + y[i];
    if(dx<0||dx>=M||dy<0||dy>=N) continue;
    if(arr[dx][dy]==0 && !visit[dx][dy]){
      visit[dx][dy]=true;
      cnt++;
      dfs(dx,dy);
      
    }
    
  }
}

int main()
{
  
  cin>>M>>N>>K;
  while(K--){
    int a,b,c,d;
    cin>>a>>b>>c>>d;
    for(int i=a;i<c;i++){
      for(int j=b;j<d;j++){
         arr[j][i]=1;
      }
    }
    
  }
  for(int i=0;i<M;i++){
    for(int j=0;j<N;j++){
      if(arr[i][j]==0 && !visit[i][j]){
        visit[i][j]=true;
        cnt=1;
        dfs(i,j);
        ans.push_back(cnt);
      }
    }
  }
  cout<<ans.size()<<endl;
  sort(ans.begin(),ans.end());
  for(int i=0;i<ans.size();i++){
    cout<<ans[i]<<" ";
  }
  return 0;
}

  
