
#include <iostream>
#include <string.h>
#include <queue>
using namespace std;

int visit[1001];
int arr[1001][1001];
int N,M,V;


void bfs(int v){
    queue <int> q;
    q.push(v);
    while(!q.empty()){
        int k=q.front();
        visit[k]=1;
        cout<<k<<" ";
        q.pop();
        for(int i=1;i<=N;i++){
            if(visit[i]==0&&arr[k][i]==1){
                q.push(i);
                visit[i]=1;
            }
        }
    }
}

void dfs(int v){
    visit[v]=1;
    cout<<v<<" ";
    for(int i=1;i<=N;i++){
        if(visit[i]==0 && arr[v][i]==1){
            dfs(i);
        }
        if(i==N) return;
    }
    
}

int main()
{
    
    int a,b;
    cin>>N>>M>>V;
    for(int i=0;i<M;i++){
        cin>>a>>b;
        arr[a][b]=1;
        arr[b][a]=1;
    }
    dfs(V);
    cout<<"\n";
    memset(visit,0,sizeof(visit));
    bfs(V);


    return 0;
}
